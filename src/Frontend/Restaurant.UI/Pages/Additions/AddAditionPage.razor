@page "/additions/add"
@using Restaurant.UI.Components
@using Restaurant.UI.Components.Additions
@using Restaurant.UI.Components.Errors
@using Restaurant.UI.DTO;
@using Restaurant.UI.Services.Abstractions;
@inject NavigationManager NavigationManager;
@inject IAdditionService AdditionService;
@inject ILogger<AddAditionPage> Logger;

<h3>AddAditionPage</h3>

@if (!string.IsNullOrWhiteSpace(_error))
{
	<ErrorComponent Text="@_error" />
}
<AdditionFormComponent OnSend="Send" OnCancelClickButton='() => NavigationManager.NavigateTo("/additions")' />
<AuthorizationComponent Roles="admin" />

@code {
	private string _error = "";

	private async Task Send(AdditionDto additionDto)
	{
		_error = "";
		try
		{
			await AdditionService.AddAsync(additionDto);
			NavigationManager.NavigateTo("/additions");
		}
		catch (Exception exception)
		{
			if (exception is RpcException)
			{
				var status = ((RpcException)exception).Status;

				if(status.StatusCode is StatusCode.InvalidArgument or StatusCode.FailedPrecondition)
				{
					_error = status.Detail;
				}
				else
				{
					_error = "Something bad happen please try again later";
				}
			}

			Logger.LogError(exception, exception.Message);
		}
    }
}
