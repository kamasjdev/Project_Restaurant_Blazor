@using Restaurant.UI.Components.Errors
@using Restaurant.UI.Components.Modal
@using Restaurant.UI.Components.Table
@using Restaurant.UI.DTO;

@if (Order is null)
{
    <ErrorComponent Text="Passed invalid Order, ensure is correct" />
}
else
{
    <dl class="row">
        <dt class="col-sm-3">
            Order Number
        </dt>
        <dd class="col-sm-9">
            @Order.OrderNumber
        </dd>
        <dt class="col-sm-3">
            Created
        </dt>
        <dd class="col-sm-9">
            @Order.Created
        </dd>
        <dt class="col-sm-3">
            Price
        </dt>
        <dd class="col-sm-9">
            @Order.Price.ToString("{0:0.00}")
        </dd>
        <dt class="col-sm-3">
            Email
        </dt>
        <dd class="col-sm-9">
            @Order.Email
        </dd>
        <dt class="col-sm-3">
            Note
        </dt>
        <dd class="col-sm-9">
            @Order.Note
        </dd>
    </dl>
    <TableComponent Items="Order.Products.ToList()">
        <DataColumn TRowData="ProductSaleDto" Title="Id" Expression="p => p.Id" />
        <DataColumn TRowData="ProductSaleDto" Title="Product Id" Expression="p => p.Product.Id" />
        <DataColumn TRowData="ProductSaleDto" Title="Product Name" Expression="p => p.Product.ProductName" />
        <DataColumn TRowData="ProductSaleDto" Title="Addition Id" Expression='p => p.Addition == null ? "-" : p.Addition.Id' />
        <DataColumn TRowData="ProductSaleDto" Title="Addition Name" Expression='p => p.Addition == null ? "-" : (string.IsNullOrWhiteSpace(p.Addition.AdditionName) ? "-" : p.Addition.AdditionName)' />
        <DataColumn TRowData="ProductSaleDto" Title="Email" Expression="p => p.Email" />
        <DataColumn TRowData="ProductSaleDto" Title="Price" Expression="p => p.EndPrice" Format="{0:0.00}" />
        <DataColumn TRowData="ProductSaleDto" Title="Action">
            <button class="btn btn-primary" @onclick="() => OpenModal(context)">
                Details
            </button>
        </DataColumn>
    </TableComponent>

    @if (_openModal)
    {
        <ModalComponent Title="Product Sale View" OnClose="OnClose">
            <Body>
                @if (_productToView is null)
                {
                    <ErrorComponent Text="@("There was issue while viewing details")" />
                }
                else
                {
                    <div class="text-info-details">
                        Product:
                    </div>
                    <dl class="row">
                        <dt class="col-sm-3">
                            Product Name
                        </dt>
                        <dd class="col-sm-9">
                            @_productToView.Product.ProductName
                        </dd>
                        <dt class="col-sm-3">
                            Product Kind
                        </dt>
                        <dd class="col-sm-9">
                            @_productToView.Product.ProductKind
                        </dd>
                        <dt class="col-sm-3">
                            Price
                        </dt>
                        <dd class="col-sm-9">
                            @string.Format("{0:0.00}", _productToView.Product.Price)
                        </dd>
                    </dl>
                    @if (_productToView.Addition is not null)
                    {
                        <div class="text-info-details">
                            Addition:
                        </div>
                        <dl class="row">
                            <dt class="col-sm-3">
                                Addition Name
                            </dt>
                            <dd class="col-sm-9">
                                @_productToView.Addition.AdditionName
                            </dd>
                            <dt class="col-sm-3">
                                Addition Kind
                            </dt>
                            <dd class="col-sm-9">
                                @_productToView.Addition.AdditionKind
                            </dd>
                            <dt class="col-sm-3">
                                Price
                            </dt>
                            <dd class="col-sm-9">
                                @string.Format("{0:0.00}", _productToView.Addition.Price)
                            </dd>
                        </dl>
                    }
                }
            </Body>
            <Footer>
                <button class="btn btn-secondary" @onclick="OnClose">
                    Close
                </button>
            </Footer>
        </ModalComponent>
    }
}

@code {
    [Parameter]
    public OrderDetailsDto? Order { get; set; }

    private bool _openModal = false;
    private ProductSaleDto? _productToView;

    private void OpenModal(ProductSaleDto productSaleDto)
    {
        _productToView = productSaleDto;
        _openModal = true;
    }

    private void OnClose()
    {
        _productToView = null;
        _openModal = false;
    }
}
